vuex 学习

将vue想作是一个js文件
组件是函数
vuex就是一个全局变量，只是这个“全局变量”包含了一些特定的规则而已

在 Vue 组件中展示状态：
	在计算属性中返回某个状态：
		computed: {
    		count () {
      			return store.state.count
    		}
  		}

通过 store 选项，Vuex提供了一种机制将状态从根组件“注入”到每一个子组件中（需调用 Vue.use(Vuex)）：
	const app = new Vue({
		el: '#app',
  		// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件
  		store,
  		components: { Counter },
  		template: `
    		<div class="app">
      			<counter></counter>
  	  		</div>
  		`
	})

通过在根实例中注册 store 选项，该 store 实例会注入到根组件下的所有子组件中，且子组件能通过 this.$store 访问到。让我们更新下 Counter 的实现：
	const Counter = {
		template: `<div>{{ count }}</div>`,
		computed: {
	    	count () {
				return this.$store.state.count
    		}
  		}
	}