
与缓存有关的头部字段
	Expires：Thu，15 Apr  2010  20：00：00  GMT;
		指明缓存的使用有效期，在这个时间之内相同的请求使用缓存，这个时间之外使用http请求

	Last-Modified : Fri , 12 May 2006 18:53:33 GMT 
		响应报文中，告诉浏览器该内容上一次修改时间（适用于文件修改了，无论改的地方重不重要）
	If-Modified-Since : Fri , 12 May 2006 18:53:33 GMT
		请求报文中，询问服务器该时间之后文件是否有被修改过

	Etag：编号etc...
		响应报文中，服务器生成的每个资源的唯一标识字符串，可以通过判断标签是否相同可得知文件重要内容是否改变（文件内容不仅修改了，修改的还是很重要的内容）
	If-None-Match：Etag：2e681a-6-5d044840
		请求报文中，服务器通过判断发送过来的Etag和计算出来的Etag是否匹配，来判断返回200还是304

	Cache-Control    操作缓存的工作机制
		值有如下：
			max-age=number    该资源的相对有效期
			no-cache    不使用本地缓存，需要使用缓存协商
			no-store    禁止浏览器缓存数据，每用户请求的都由服务器提供完整的数据
			public    可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器
			private    只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。

既生Last-Modified何生Etag？
	Etag的出现主要是为了解决几个Last-Modified比较难解决的问题：
		一些文件也许会周期性的更改，但是他的内容并不改变（仅仅改变的修改时间），这个时候我们并不希望客户端认为这个文件被修改了，而重新GET
		某些文件修改非常频繁，比如在秒以下的时间内进行修改，(比方说1s内修改了N次)，If-Modified-Since能检查到的粒度是s级的，这种修改无法判断(或者说UNIX记录MTIME只能精确到秒)
		某些服务器不能精确的得到文件的最后修改时间
	Last-Modified与ETag是可以一起使用的，服务器会优先验证ETag，一致的情况下，才会继续比对Last-Modified，最后才决定是否返回304。
 