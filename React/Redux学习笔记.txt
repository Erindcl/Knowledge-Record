Redux学习笔记

reducer -> 根据state（初始的状态）和action（更新操作）参数 返回新的state


基本步骤：
第一：定义基本状态
	const initialState = {
	  userData: {name:''}
	};
第二：定义reducer
	const reducer = (state = initialState, action) => {
	  const { type, payload } = action;
	  switch (type) {
	    case 'GET_USER_DATA':
		    return Object.assign({}, state, {
		      userData: payload,
		    });
		case '...':
			return Object.assign({}, state, {
		      ...: payload,
		    });
	    default:
	      return state;
	  }
	};
第三：根据reducer创建store -> 定义状态、订阅者、添加订阅者方法、获取状态方法、更新状态的方法（根据参数做相应的操作去改变状态、遍历订阅者）
	const store = createStore(
	  combineReducers({ ...appReducer }),
	  __PRODUCTION ? applyMiddleware(...middlewares): composeWithDevTools(applyMiddleware(...middlewares))
	) // middlewares为中间件
第四步：定义action 更新状态 [*?]获取状态
	const loginData = (data) => ({
	  type: 'GET_LOGIN_DATA',
	  payload: data
	})
	store.dispatch(loginData(newData))
	[*?]store.getState(...)
